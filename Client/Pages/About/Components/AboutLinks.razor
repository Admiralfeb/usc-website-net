@using UnitedSystemsCooperative.Web.Client.Models
@inject IConfiguration _configuration

<MudContainer MaxWidth="MaxWidth.Medium">
    <MudPaper>
        <div style="display: grid;grid-template-rows: auto">
            <div class="button-group">
                @foreach (var button in _buttons.Where(x => x.Local == true))
                {
                    <MudButton Variant="Variant.Outlined" Color="Color.Secondary" Link="@button.Link">
                        @button.Title
                    </MudButton>
                }
            </div>
            <div class="button-group">
                @foreach (var button in _buttons.Where(x => x.Local == false))
                {
                    <MudButton Variant="Variant.Outlined" Color="Color.Primary" Link="@button.Link">
                        @button.Title
                    </MudButton>
                }
            </div>
        </div>
    </MudPaper>
</MudContainer>

@code {
    private AboutLayoutButtonInfo[]? _buttons;

    protected override void OnInitialized()
    {
        _buttons = _configuration.GetSection(AboutLayoutButtonInfo.SettingName).Get<AboutLayoutButtonInfo[]>();
        var uscLinks = _configuration.GetSection(UscLink.SettingName).Get<UscLink[]>();
        _buttons = _buttons.Select(x =>
        {
            if (!x.Link.Contains('{')) return x;
            var replacement = uscLinks.First(y => string.Equals(y.Replace, x.Link, StringComparison.CurrentCultureIgnoreCase));
            x.Link = replacement.Link;
            return x;
        }).ToArray();
    }

}